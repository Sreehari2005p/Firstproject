import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy import stats 
beml_df=pd.read_csv(r"C:\Users\Nijil\OneDrive\Desktop\Data Science\BEML.csv")
glaxo_df=pd.read_csv(r"C:\Users\Nijil\OneDrive\Desktop\Data Science\GLAXO.csv")
print(beml_df.columns)
beml=beml_df[['Date','Close']]
glaxo=glaxo_df[['Date','Close']]
print(beml.shape)
beml=beml.set_index(pd.DatetimeIndex(beml['Date']))
glaxo=glaxo.set_index(pd.DatetimeIndex(glaxo.Date))
plt.plot(beml.index,beml.Close)
plt.title('BEML')
plt.xlabel('Time')
plt.ylabel('Closing Proze')
plt.show()
plt.plot(glaxo.Close)
plt.title('GLAXO')
plt.xlabel('Time')
plt.ylabel('Closing Proze')
plt.show()
beml['Gain']=beml.Close.pct_change(periods=1)
glaxo['Gain']=glaxo.Close.pct_change(periods=1)
beml=beml.dropna()
glaxo=glaxo.dropna()
print(glaxo.isnull().sum())
print(beml.isnull().sum())
plt.figure(figsize=(8,6))
plt.plot(beml.index,beml.Gain)
plt.title('BEML')
plt.xlabel('Index')
plt.ylabel('Gain')
plt.show()
import warnings
warnings.filterwarnings('ignore')
sns.distplot(beml.Gain,label='BEML')
plt.xlabel('Gain')
plt.ylabel('Dencity')
plt.title('BEML')
plt.legend()
plt.show()
sns.distplot(glaxo.Gain,label='GLAXO',color='r')
plt.xlabel('Gain')
plt.ylabel('Dencity')
plt.title('GLAXO')
plt.legend()
plt.show()
Y=pd.DataFrame(columns=['beml_Gain','glaxo_Gain'])
Y['beml_Gain']=pd.Series(beml.Gain)
Y['glaxo_Gain']=pd.Series(glaxo.Gain)
sns.distplot(Y['beml_Gain'],label='BEML')
sns.distplot(Y['glaxo_Gain'],label='GLAXO')
plt.title('BEML VS GLAXO')
plt.xlabel('Gain')
plt.ylabel('Dencity')
plt.show()
print('Mean-Glaxo/ Avg Daily Return',np.round(glaxo.Gain.mean(),4))
print('Std Deviation-Glaxo',np.round(glaxo.Gain.std(),4))
print('Mean-BEML/ Avg Daily Return',np.round(beml.Gain.mean(),4))
print('Std Deviation-BEML',np.round(beml.Gain.std(),4))
print(glaxo.Gain.mode())
#Probablity of making 2% loss or Higher in glaxo
print('Prob of 2% Loss or higher',np.round(stats.norm.cdf(-0.02,glaxo.Gain.mean(),glaxo.Gain.std()),4))
#Probablity of making 2% gain or Higher in glaxo
print('Prob of 2% Gain or higher',np.round(1-stats.norm.cdf(0.02,glaxo.Gain.mean(),glaxo.Gain.std()),4))
